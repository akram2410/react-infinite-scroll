{"version":3,"sources":["useBookSearch.js","App.js","index.js"],"names":["useBookSearch","query","pageNumber","useState","loading","setLoading","error","setError","books","setBooks","hasMore","setHasMore","useEffect","cancel","axios","method","url","params","q","page","cancelToken","CancelToken","c","then","res","prevBooks","Set","data","docs","map","book","title","length","catch","e","isCancel","App","setQuery","setPageNumber","observer","useRef","lastElementRef","useCallback","node","current","disconnect","IntersectionObserver","entries","isIntersecting","prevPageNumber","observe","type","value","onChange","target","index","ref","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+MA+CeA,EA5CO,SAACC,EAAOC,GAC5B,MAA8BC,oBAAS,GAAvC,mBAAOC,EAAP,KAAgBC,EAAhB,KACA,EAA0BF,oBAAS,GAAnC,mBAAOG,EAAP,KAAcC,EAAd,KACA,EAA0BJ,mBAAS,IAAnC,mBAAOK,EAAP,KAAcC,EAAd,KACA,EAA8BN,oBAAS,GAAvC,mBAAOO,EAAP,KAAgBC,EAAhB,KAgCA,OA9BAC,qBAAU,WAGR,IAAIC,EAqBJ,OAvBAR,GAAW,GACXE,GAAS,GAETO,IAAM,CACJC,OAAQ,MACRC,IAAK,qCACLC,OAAQ,CACNC,EAAGjB,EACHkB,KAAMjB,GAERkB,YAAa,IAAIN,IAAMO,aAAY,SAACC,GAAD,OAAQT,EAASS,OAEnDC,MAAK,SAACC,GACLf,GAAS,SAACgB,GACR,OAAO,YAAI,IAAIC,IAAJ,sBAAYD,GAAZ,YAA0BD,EAAIG,KAAKC,KAAKC,KAAI,SAACC,GAAD,OAAUA,EAAKC,gBAExEpB,EAAWa,EAAIG,KAAKC,KAAKI,OAAS,GAClC3B,GAAW,MAEZ4B,OAAM,SAACC,GACFpB,IAAMqB,SAASD,IACnB3B,GAAS,MAEN,kBAAMM,OACZ,CAACZ,EAAOC,IAEXU,qBAAU,WACRH,EAAS,MACR,CAACR,IACG,CACLG,UACAE,QACAE,QACAE,Y,OCQW0B,MAhDf,WACE,MAA0BjC,mBAAS,IAAnC,mBAAOF,EAAP,KAAcoC,EAAd,KACA,EAAoClC,mBAAS,GAA7C,mBAAOD,EAAP,KAAmBoC,EAAnB,KAEA,EAA2CtC,EAAcC,EAAOC,GAAxDM,EAAR,EAAQA,MAAOE,EAAf,EAAeA,QAAgBN,GAA/B,EAAwBE,MAAxB,EAA+BF,SAEzBmC,EAAWC,mBAEXC,EAAiBC,uBACrB,SAACC,GACKvC,IACAmC,EAASK,SACXL,EAASK,QAAQC,aAEnBN,EAASK,QAAU,IAAIE,sBAAqB,SAACC,GACvCA,EAAQ,GAAGC,gBAAkBtC,GAC/B4B,GAAc,SAACW,GAAD,OAAoBA,EAAiB,QAGnDN,GAAMJ,EAASK,QAAQM,QAAQP,MAErC,CAACvC,EAASM,IAOZ,OACE,qCACE,uBAAOyC,KAAK,OAAOC,MAAOnD,EAAOoD,SANhB,SAACnB,GACpBG,EAASH,EAAEoB,OAAOF,OAClBd,EAAc,MAKX9B,EAAMqB,KAAI,SAACC,EAAMyB,GAChB,OAAI/C,EAAMwB,SAAWuB,EAAQ,EAEzB,qBAAKC,IAAKf,EAAV,SACGX,GAD4BA,GAK1B,8BAAiBA,GAAPA,MAGrB,8CACA,4CC1CN2B,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.1138ed7b.chunk.js","sourcesContent":["import { useEffect, useState } from 'react';\nimport axios from 'axios';\n\nconst useBookSearch = (query, pageNumber) => {\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(false);\n  const [books, setBooks] = useState([]);\n  const [hasMore, setHasMore] = useState(false);\n\n  useEffect(() => {\n    setLoading(true);\n    setError(false);\n    let cancel;\n    axios({\n      method: 'GET',\n      url: 'http://openlibrary.org/search.json',\n      params: {\n        q: query,\n        page: pageNumber,\n      },\n      cancelToken: new axios.CancelToken((c) => (cancel = c)),\n    })\n      .then((res) => {\n        setBooks((prevBooks) => {\n          return [...new Set([...prevBooks, ...res.data.docs.map((book) => book.title)])];\n        });\n        setHasMore(res.data.docs.length > 0);\n        setLoading(false);\n      })\n      .catch((e) => {\n        if (axios.isCancel(e)) return;\n        setError(true);\n      });\n    return () => cancel();\n  }, [query, pageNumber]);\n\n  useEffect(() => {\n    setBooks([]);\n  }, [query]);\n  return {\n    loading,\n    error,\n    books,\n    hasMore,\n  };\n};\n\nexport default useBookSearch;\n","import React, { useState, useRef, useCallback } from 'react';\nimport useBookSearch from './useBookSearch';\n\nfunction App() {\n  const [query, setQuery] = useState('');\n  const [pageNumber, setPageNumber] = useState(1);\n\n  const { books, hasMore, error, loading } = useBookSearch(query, pageNumber);\n\n  const observer = useRef();\n\n  const lastElementRef = useCallback(\n    (node) => {\n      if (loading) return;\n      if (observer.current) {\n        observer.current.disconnect();\n      }\n      observer.current = new IntersectionObserver((entries) => {\n        if (entries[0].isIntersecting && hasMore) {\n          setPageNumber((prevPageNumber) => prevPageNumber + 1);\n        }\n      });\n      if (node) observer.current.observe(node);\n    },\n    [loading, hasMore],\n  );\n\n  const handleSearch = (e) => {\n    setQuery(e.target.value);\n    setPageNumber(1);\n  };\n  return (\n    <>\n      <input type=\"text\" value={query} onChange={handleSearch} />\n      {books.map((book, index) => {\n        if (books.length === index + 1) {\n          return (\n            <div ref={lastElementRef} key={book}>\n              {book}\n            </div>\n          );\n        } else {\n          return <div key={book}>{book}</div>;\n        }\n      })}\n      <div>Loading....</div>\n      <div>Error</div>\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}